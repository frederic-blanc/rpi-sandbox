---
- name: Update and upgrade apt packages
  apt:
    upgrade:        dist
    update_cache:   yes
    autoremove:     yes
    force_apt_get:  yes
  register:         upgrade_results
  become:           true
  
- name: set fact to signal that a reboot is needed
  set_fact:         reboot_on_upgrade="{{ 'reboot' in upgrade_results.stdout }}" 
  
- name: ensure that config.txt cmdline is correct
  lineinfile:
    path:           "/boot/firmware/config.txt"
    regexp:         '^cmdline='
    line:           "cmdline=cmdline.txt"
  register:         boot_config
  become:           true
  
- name: Update firmware if needed
  block:
  - name: add useful tooling
    apt:
      name:           "unzip"
      force_apt_get:  yes
    
  - name:           create temporary build directory
    tempfile:
      state:        directory
      suffix:       build
    register:       build_tmp_dir
    changed_when:   false
    
  - name: copy firmaware to build_tmp_dir
    unarchive:
      src:          "{{ firmware.archive }}"
      dest:         "{{ build_tmp_dir.path }}"
      mode:         '0500'
      exclude:      "{{ firmware.old_bin }}"
    changed_when:   false
    
  - name: Check firmware version
    shell:          "{{ build_tmp_dir.path }}/vl805 -v {{ build_tmp_dir.path }}/{{ firmware.new_bin }}"
    register:       firmware_check
    changed_when:   false
    
  - name: Update firmware if needed
    shell:          "{{ build_tmp_dir.path }}/vl805 -w {{ build_tmp_dir.path }}/{{ firmware.new_bin }}"
    when:           firmware_check.rc != 0
    register:       firmware
    
  always:
  - name: delete temporary build directory
    file:
      path:         "{{ build_tmp_dir.path }}"
      state:        absent
    when:           build_tmp_dir is defined
    changed_when:   false
  become:           true
  
- name: Set timezone
  timezone:
    name:           "{{ timezone }}"
  become:           true
  
- name: add useful tooling
  apt:
    name:           "{{ useful_tools }}"
    force_apt_get:  yes
  become:           true
  
# reboot if needed
- name: reboot on change
  block:
  - name: reboot
    reboot:
    
  - name:           create temporary build directory
    tempfile:
      state:        directory
      suffix:       build
    register:       build_tmp_dir
    changed_when:   false
    
  - name: create wait_for_automatic_updates.sh script
    copy:
      content: |
        #!/bin/bash  
        # Ubuntu automatically checks for updates on first boot. This ensures that has completed before continuing.
        # If it hasn't finished in 10 minutes, the script will exit ungracefully.
        timeout=$(($(date +%s) + 600))
        while pgrep apt > /dev/null; do
            time=$(date +%s)
            if [[ $time -ge $timeout ]]; then
                exit 1
            fi
            sleep 1
        done
        exit 0
        
      dest:         "{{ build_tmp_dir.path }}/wait_for_automatic_updates.sh"
      owner:        root
      group:        root
      mode:         '0755'
    changed_when:   false
    
  - name: execute wait_for_automatic_updates.sh script
    command:        "{{ build_tmp_dir.path }}/wait_for_automatic_updates.sh"
    changed_when:   false
    
  always:
  - name: delete temporary build directory
    file:
      path:         "{{ build_tmp_dir.path }}"
      state:        absent
    when:           build_tmp_dir is defined
    changed_when:   false
  
  when:             reboot_on_upgrade or firmware.changed or boot_config.changed
  become:           true
  
